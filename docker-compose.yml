services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./storage/app/public:/var/www/storage/app/public
    depends_on:
      - mysql
      - redis
    networks:
      - laravel
    # Tidak expose port karena akses via nginx

  queue-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-queue
    restart: unless-stopped
    working_dir: /var/www
    command: php artisan queue:work --sleep=3 --tries=3 --timeout=60
    volumes:
      - .:/var/www
    depends_on:
      - app
      - mysql
      - redis
    networks:
      - laravel

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-scheduler
    restart: unless-stopped
    working_dir: /var/www
    command: /bin/sh -c "while true; do php artisan schedule:run; sleep 60; done"
    volumes:
      - .:/var/www
    depends_on:
      - app
      - mysql
      - redis
    networks:
      - laravel

  reverb:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-reverb
    restart: unless-stopped
    working_dir: /var/www
    command: php artisan reverb:start --host=0.0.0.0 --port=5090
    volumes:
      - .:/var/www
    depends_on:
      - app
      - mysql
      - redis
    networks:
      - laravel
    # Internal port, akses via nginx proxy

  webserver:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - "80:80"   # HTTP (redirect ke HTTPS)
      - "443:443" # HTTPS (production)
    volumes:
      - .:/var/www
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./storage/app/public:/var/www/storage/app/public
    depends_on:
      - app
    networks:
      - laravel

  mysql:
    image: mysql:8.0
    container_name: laravel-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: aslab
      MYSQL_ROOT_PASSWORD: aslab2025
      MYSQL_PASSWORD: aslab2025
      MYSQL_USER: aslab
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - laravel
    # Tidak expose port untuk security (internal only)

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel-phpmyadmin
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: aslab2025
      PMA_ARBITRARY: 1
    ports:
      - "8080:80" # PHPMyAdmin web interface
    networks:
      - laravel
    depends_on:
      - mysql

  redis:
    image: redis:alpine
    container_name: laravel-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - laravel
    # Tidak expose port untuk security (internal only)

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local

networks:
  laravel:
    driver: bridge
